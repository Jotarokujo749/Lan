from flask import Flask, request, jsonify
from flask_cors import CORS
import requests
from bs4 import BeautifulSoup

app = Flask(__name__)
CORS(app)

def get_wikipedia(mot):
    try:
        res = requests.get(f"https://fr.wikipedia.org/wiki/{mot}")
        soup = BeautifulSoup(res.text, "html.parser")
        p = soup.find("p")
        return p.text.strip() if p else "Rien trouvé sur Wikipedia."
    except:
        return "Erreur Wikipedia"

def get_wiktionnaire(mot):
    try:
        res = requests.get(f"https://fr.wiktionary.org/wiki/{mot}")
        soup = BeautifulSoup(res.text, "html.parser")
        definition = soup.find("p")
        return definition.text.strip() if definition else "Rien trouvé sur Wiktionnaire."
    except:
        return "Erreur Wiktionnaire"

def get_cnrtl(mot):
    try:
        res = requests.get(f"https://www.cnrtl.fr/definition/{mot}")
        soup = BeautifulSoup(res.text, "html.parser")
        zone = soup.find("div", {"id": "definition"})
        return zone.text.strip() if zone else "Rien trouvé sur CNRTL."
    except:
        return "Erreur CNRTL"

def get_reverso(mot):
    try:
        res = requests.get(f"https://dictionnaire.reverso.net/francais-definition/{mot}")
        soup = BeautifulSoup(res.text, "html.parser")
        span = soup.find("div", class_="contentBox")
        return span.text.strip() if span else "Rien trouvé sur Reverso."
    except:
        return "Erreur Reverso"

@app.route("/scrape", methods=["POST"])
def scrape():
    data = request.get_json()
    mot = data.get("mot", "").lower()

    wiki = get_wikipedia(mot)
    wiktionary = get_wiktionnaire(mot)
    cnrtl = get_cnrtl(mot)
    reverso = get_reverso(mot)

    fusion = {
        "Wikipedia": wiki,
        "Wiktionnaire": wiktionary,
        "CNRTL": cnrtl,
        "Reverso": reverso
    }
    return jsonify(fusion)

if __name__ == "__main__":
    app.run(port=5001)
